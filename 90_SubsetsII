90. Subsets II
Given a collection of integers that might contain duplicates, nums, return all possible subsets.

Note:
Elements in a subset must be in non-descending order.
The solution set must not contain duplicate subsets.
For example,
If nums = [1,2,2], a solution is:

[
  [2],
  [1],
  [1,2,2],
  [2,2],
  [1,2],
  []
]

public class Solution {
    public List<List<Integer>> subsetsWithDup(int[] nums) {
        ArrayList<List<Integer>> lists = new ArrayList<List<Integer>>();
        if (nums.length == 0) {
            return lists;
        }
        Arrays.sort(nums);
        for (int i = 0; i < Math.pow(2,nums.length); i++) {
            ArrayList<Integer> list = new ArrayList<>();
            for (int j = 0; j < nums.length; j++) {
                if ((i & (1<<j)) != 0) {
                    list.add(nums[j]);
                }
            }
            if (!lists.contains(list)) {
                lists.add(list);
            }
        }
        return lists;
    }
}
