Problem Description:
Given two sparse matrices A and B, return the result of AB.
You may assume that A's column number is equal to B's row number.
Example:
A = [
  [ 1, 0, 0],
  [-1, 0, 3]
]
B = [
  [ 7, 0, 0 ],
  [ 0, 0, 0 ],
  [ 0, 0, 1 ]
]
     |  1 0 0 |   | 7 0 0 |   |  7 0 0 |
AB = | -1 0 3 | x | 0 0 0 | = | -7 0 3 |
                  | 0 0 1 |

Thoughts:



solution:
public class Solution {
    public int[][] multiply(int[][] A, int[][] B) {
      int rowLength = A.length; //row
      int commonLength = A[0].length;
      int colLength = B[0].length; // column
      int[][] result = new int[rowLength][colLength];

      for (int i=0; i<rowLength; i++) {
        for (int j=0; j<colLength; j++) {
          for (int k=0; k<commonLength; k++) {
            result[i][j] += A[i][k]*B[k][j]; 
          }
        }
      }
      
      return result;
    }
}


Other solution:
public class Solution {
    public int[][] multiply(int[][] A, int[][] B) {
        int m = A.length, n = A[0].length, nB = B[0].length;
        int[][] C = new int[m][nB];

        for(int i = 0; i < m; i++) {
            for(int k = 0; k < n; k++) {
                if (A[i][k] != 0) {
                    for (int j = 0; j < nB; j++) {
                        if (B[k][j] != 0) C[i][j] += A[i][k] * B[k][j];
                    }
                }
            }
        }
        return C;   
    }
}


Tips:
1. Maxtrix row length, column length
  row A.length()
  column A[0].length
