103. Binary Tree Zigzag Level Order Traversal
Given a binary tree, return the zigzag level order traversal of its nodes' values. (ie, from left to right, then right to left for the
next level and alternate between).

For example:
Given binary tree {3,9,20,#,#,15,7},
    3
   / \
  9  20
    /  \
   15   7
return its zigzag level order traversal as:
[
  [3],
  [20,9],
  [15,7]
]

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {
        ArrayList<List<Integer>> lists = new ArrayList<List<Integer>>();
        if (root == null) {
            return lists;
        }
        
        Queue<TreeNode> q = new LinkedList<>();
        q.offer(root);
        int i = 0;
        while (!q.isEmpty()) {
            Queue<TreeNode> sameLevel = new LinkedList<>();
            ArrayList<Integer> list = new ArrayList<>();
            while (!q.isEmpty()) {
                TreeNode tmp = q.poll();
                if (tmp.left != null) {
                    sameLevel.offer(tmp.left);
                }
                if (tmp.right != null) {
                    sameLevel.offer(tmp.right);
                }
                list.add(tmp.val);
            }
            q = sameLevel;
            System.out.println(i);
            if (i%2 == 1) {
                Collections.reverse(list);
                lists.add(list);
            }else {
                lists.add(list);
            }
            i++;
        }
        return lists;
    }
}



