You are given an n x n 2D matrix representing an image.

Rotate the image by 90 degrees (clockwise).

Follow up:
Could you do this in-place?

public class Solution {
    public void rotate(int[][] matrix) {
        int row = matrix.length;
        int col = matrix[0].length;
        int [][] ans = new int[row][col];
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                ans[i][j] = matrix[i][j];
            }
        }
        
        for (int i = 0; i < row; i++) {
            for (int j = 0; j < col; j++) {
                matrix[j][col-1-i] = ans[i][j];
            }
        }
    }
}

// remember to copy each value of matrix to ans before do the rotate;

* clockwise rotate
* first reverse up to down, then swap the symmetry 
* 1 2 3     7 8 9     7 4 1
* 4 5 6  => 4 5 6  => 8 5 2
* 7 8 9     1 2 3     9 6 3

* anticlockwise rotate
* first reverse left to right, then swap the symmetry
* 1 2 3     3 2 1     3 6 9
* 4 5 6  => 6 5 4  => 2 5 8
* 7 8 9     9 8 7     1 4 7

public class Solution {
    public void rotate(int[][] matrix) {
        int len = matrix.length;
        reverse(matrix);
        for(int i=0;i<len;i++)
            for(int j=i+1;j<len;j++){
                int temp;
                temp = matrix[i][j];
                matrix[i][j]=matrix[j][i];
                matrix[j][i]=temp;
            }
    }
    
    public void reverse(int[][] matrix){
        int len = matrix.length;
        for(int i=0;i<len/2;i++){
            int[] temp = new int[len];
            temp = matrix[i];
            matrix[i]=matrix[len-1-i];
            matrix[len-1-i]=temp;
        }
    }
}
