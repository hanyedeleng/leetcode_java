Given a binary tree, return all root-to-leaf paths.

For example, given the following binary tree:

   1
 /   \
2     3
 \
  5
All root-to-leaf paths are:

["1->2->5", "1->3"]

Solution:
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
      List<String> paths = new ArrayList<>();
      if(root != null) {
        allPaths(root, "", paths);
      }
      return paths;
    }
    
    public void allPaths(TreeNode root, String str, List<String> paths){
      if (root.left == null && root.right == null) {
        paths.add(str + root.val);
      }
      if (root.left != null) allPaths(root.left, str + root.val + "->", paths);
      if (root.right != null) allPaths(root.right, str + root.val + "->", paths);
    }
}

 仔细体会！！！
