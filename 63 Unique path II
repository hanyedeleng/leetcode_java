63 Unique path II
Follow up for "Unique Paths":
Now consider if some obstacles are added to the grids. How many unique paths would there be?
An obstacle and empty space is marked as 1 and 0 respectively in the grid.

For example,
There is one obstacle in the middle of a 3x3 grid as illustrated below.

[
  [0,0,0],
  [0,1,0],
  [0,0,0]
]
The total number of unique paths is 2.

public int uniquePathsWithObstacles(int[][] obstacleGrid) {
    int width = obstacleGrid[0].length;
    int[] dp = new int[width];
    dp[0] = 1;
    for (int[] row : obstacleGrid) {
        for (int j = 0; j < width; j++) {
            if (row[j] == 1)
                dp[j] = 0;
            else if (j > 0)
                dp[j] += dp[j - 1];
        }
    }
    return dp[width - 1];
}


// remember m-1, n-1, m+n-1
Here is my understanding of the code: Array dp stores the number of paths which passing this point. 
The whole algorithm is to sum up the paths from left grid and up grid. 'if (row[j] == 1) dp[j] = 0;'
means if there is an obstacle at this point. All the paths passing this point will no longer valid. 
In other words, the grid right of the obstacle can be reached only by the grid which lies up to it. 
Hope it helps.
