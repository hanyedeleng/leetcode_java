
Given an array of strings, group anagrams together.
For example, given: ["eat", "tea", "tan", "ate", "nat", "bat"], 
Return:

[
  ["ate", "eat","tea"],
  ["nat","tan"],
  ["bat"]
]
Note:
For the return value, each inner list's' elements must follow the lexicographic order.
All inputs will be in lower-case.

public class Solution {
    public List<List<String>> groupAnagrams(String[] strs) {
        ArrayList<List<String>> lists = new ArrayList<List<String>>();
        if (strs.length == 0) {
            return lists;
        }
        
        Map<String, ArrayList<String>> map = new HashMap<String, ArrayList<String>>();
        Arrays.sort(strs);
        for (int i = 0; i < strs.length; i++) {
            char[] t = strs[i].toCharArray();
            Arrays.sort(t);
            String s = String.valueOf(t);
            if (map.get(s) == null) {
                ArrayList<String> tmp = new ArrayList<>();
                tmp.add(strs[i]);
                map.put(s,tmp);
            }else {
                ArrayList<String> tmp = map.get(s);
                tmp.add(strs[i]);
                map.put(s,tmp);
            }
        }
        for (String s:map.keySet()) {
            lists.add(map.get(s));
        }
        return lists;
    }
}
