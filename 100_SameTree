Given two binary trees, write a function to check if they are equal or not.
Two binary trees are considered equal if they are structurally identical and the nodes have the same value.


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
      if (p==null && q==null) {
        return true;
      }
      if (p!=null && q!=null && p.val == q.val) {
        if (isSameTree(p.left, q.left) && isSameTree(p.right, q.right)) {
          return true;
        }
      }
      
      return false;
    }
}

Other's solution:
public class Solution {
    public boolean isSameTree(TreeNode p, TreeNode q) {
        if(p!=null&&q!=null){
            return (p.val==q.val)&&isSameTree(p.left,q.left)&&isSameTree(p.right,q.right);
        }else if(p==null&&q==null){
            return true;
        }else{
            return false;
        }
    }
}

Tips:
1. don't forget null
2. don't forget to check p before call p.val!!!!!
