228. Summary Ranges
Given a sorted integer array without duplicates, return the summary of its ranges.

For example, given [0,1,2,4,5,7], return ["0->2","4->5","7"].

public class Solution {
    public List<String> summaryRanges(int[] nums) {
        ArrayList<String> list = new ArrayList<>();
        if (nums.length == 0) {
            return list;
        }
        for (int i = 0; i < nums.length; i++) {
            String tmp = "";
            tmp += nums[i];
            int j = i+1;
            if (j < nums.length && nums[i] + 1 == nums[j]) {
                while (j+1 < nums.length && nums[j] + 1 == nums[j+1]) {
                    j++;
                }
                tmp = tmp + "->" + nums[j];
                list.add(tmp);
                i = j;
            }else {
                list.add(tmp);
            }
        }
        return list;
    }
}


other solution
List<String> list=new ArrayList();
    if(nums.length==1){
        list.add(nums[0]+"");
        return list;
    }
    for(int i=0;i<nums.length;i++){
        int a=nums[i];
        while(i+1<nums.length&&(nums[i+1]-nums[i])==1){
            i++;
        }
        if(a!=nums[i]){
            list.add(a+"->"+nums[i]);
        }else{
            list.add(a+"");
        }
    }
    return list;
