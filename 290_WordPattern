Given a pattern and a string str, find if str follows the same pattern.

Here follow means a full match, such that there is a bijection between a letter in pattern and a non-empty word in str.

Examples:
pattern = "abba", str = "dog cat cat dog" should return true.
pattern = "abba", str = "dog cat cat fish" should return false.
pattern = "aaaa", str = "dog cat cat dog" should return false.
pattern = "abba", str = "dog dog dog dog" should return false.
Notes:
You may assume pattern contains only lowercase letters, and str contains lowercase letters separated by a single space.

public class Solution {
    public boolean wordPattern(String pattern, String str) {
      if(pattern.length() == 0||str.length() == 0) {
        return false;
      }
      
      String[] ss = str.split(" ");
      if(ss.length != pattern.length()) {
          return false;
      }
    //   for (int i = 0; i < ss.length; i++) {
    //     System.out.println(ss[i]);
    //   }
      Map<Character, String> map = new HashMap<>();

      for(int i = 0; i < pattern.length(); i++) {
        if(map.get(pattern.charAt(i)) == null) {
          if(map.containsValue(ss[i])) {
            return false;
          }
          map.put(pattern.charAt(i), ss[i]);
        }else{
          if(!map.get(pattern.charAt(i)).equals(ss[i])) {
            return false;
          }
        }
      }
      return true;
    }
}

Tips:
1. string equals
2. string length();
