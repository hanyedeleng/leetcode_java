Given an integer, write a function to determine if it is a power of three.

Follow up:
Could you do it without using any loop / recursion?


public class Solution {
    public boolean isPowerOfThree(int n) {
      if (n==1) {
        return true;
      }  
      
      int i = 1;
      while (i<n) {
        i = i * 3;
      }
      if (i==n) {
        return true;
      }
      return false;
    }
}

case: 2147483647 time limit exceeded
the following solution pass:
public class Solution {
    public boolean isPowerOfThree(int n) {
      if (n==1) {
        return true;
      }  
      
      while(n%3==0 && n>1) {
          n = n/3;
      }
      if (n==1) {
          return true;
      }
      return false;
    } 
}
Other's solution:
public class Solution {
public boolean isPowerOfThree(int n) {
    // 1162261467 is 3^19,  3^20 is bigger than int  
    return ( n>0 &&  1162261467%n==0);
}
