You are climbing a stair case. It takes n steps to reach to the top.
Each time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?


fa
public class Solution {
    public int climbStairs(int n) {
       if (n<=3) {
        return n;
       }
       
      int result = 0;
      int i = 3;
      int[] a = new int[n+1];
      a[0] = 0;
      a[1] = 1;
      a[2] = 2;
      while(i<=n) {
        a[i] = a[i-1] + a[i-2];
        i++;
      }
      return a[n];
    }
}


other's:
public static int climbStairs(int n) {
        return n > 1 ? (climbStairs(n - 1) + climbStairs(n - 2)) : 1;
    }
    
