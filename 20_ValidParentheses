Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

The brackets must close in the correct order, "()" and "()[]{}" are all valid but "(]" and "([)]" are not.

// use stack
public class Solution {
    public boolean isValid(String s) {
      if(s == null) {
        return true;
      }
      
      Stack<Character> stack = new Stack<>();
      for(int i = 0; i < s.length(); i++) {
        char c = s.charAt(i);
        if(c == '(' || c == '{' || c == '[') {
          stack.push(c);
          continue;
        }
        if(stack.empty()) {
          return false;
        }
        char tmp = stack.pop();
        if(c == ')' && tmp == '(') {
          continue;
        }
        if(c == '}' && tmp == '{') {
          continue;
        }
        if(c == ']' && tmp == '[') {
          continue;
        }
        stack.push(tmp);
        stack.push(c);
      }
      return stack.empty();
    }
}

Tips:
1. don't forget stack.empty()
2. don't forget to push the new char, and the new pop char
