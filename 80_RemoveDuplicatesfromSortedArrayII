80. Remove Duplicates from Sorted Array II
Follow up for "Remove Duplicates":
What if duplicates are allowed at most twice?

For example,
Given sorted array nums = [1,1,1,2,2,3],

Your function should return length = 5, with the first five elements of nums being 1, 1, 2, 2 and 3. It doesnnot matter what you leave beyond 
the new length.


public class Solution {
    public int removeDuplicates(int[] nums) {
        int ans = 0;
        for (int i = 0; i < nums.length; i++) {
            if (i < nums.length - 1 && nums[i] == nums[i+1]) {
                i++;
                while (i < nums.length - 1 && nums[i] == nums[i+1]) {
                    ans++;
                    i++;
                }
                if (ans != 0) {
                    nums[i-ans-1] = nums[i];
                    nums[i-ans] = nums[i];
                }
                i--;
            }else if (ans != 0) {
                nums[i-ans] = nums[i];
            }
        }
        return nums.length-ans;
    }
}


other's solution:
public int removeDuplicates(int[] nums) {
    if (nums.length == 0) {return 0;}
    int pointer = 0, flag = 0;
    for (int i = 1; i < nums.length; i++) {
        if (nums[i] == nums[i - 1] && flag == 0) {
            flag = 1;
            pointer++;
        } else if (nums[i] != nums[i - 1]) {
            flag = 0;
            pointer++;
        }
        nums[pointer] = nums[i];
    }
    return pointer + 1;
}
