283	Move Zeroes
Given an array nums, write a function to move all 0's' to the end of it while maintaining the relative
order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].
Note:
You must do this in-place without making a copy of the array.
Minimize the total number of operations.

public class Solution {
    public void moveZeroes(int[] nums) {
        if (nums.length <= 1) {
            return;
        }
        
        int nums_zero = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] == 0) {
                nums_zero++;
            }else {
                if (nums_zero > 0) {
                    nums[i-nums_zero] = nums[i];
                    nums[i] = 0;
                }
            }    
        }
        return;
    }
}

Tips: exchange the element with the nearest non-zero element.

Other's solution:
public void moveZeroes(int[] nums) {
    int count = 0;
    for (int i = 0; i < nums.length; i++) {
        if (nums[i] == 0) {
            count++;
        } else {
            nums[i - count] = nums[i];
            if (count != 0) {nums[i] = 0;}
        }
    }
    return;
}
this one is O(1);
