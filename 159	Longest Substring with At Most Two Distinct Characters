
159	Longest Substring with At Most Two Distinct Characters
Given a string S, find the length of the longest substring T that contains at most two distinct characters.
For example,
Given S = “eceba”,
T is “ece” which its length is 3.
public int lengthOfLongestSubstringTwoDistinct(String s) {  
    int left = 0, second = -1;  
    int n = s.length();  
    int len = 0;  
    for(int i=1; i < n; i++) {  
        if(s.charAt(i) == s.charAt(i-1)) continue;  
        if(second >= 0 && s.charAt(i) != s.charAt(second)) {  
            len = Math.max(len, i-left);  
            left = second+1;  
        }  
        second = i-1;  
    }  
    return Math.max(len, n-left);  
}  
最优的解法应该是维护一个sliding window，指针变量i指向sliding window的起始位置，j指向另个一个字符在sliding window的最后一个，
用于定位i的下一个跳转位置。内部逻辑就是
1）如果当前字符跟前一个字符是一样的，直接继续。
2）如果不一样，则需要判断当前字符跟j是不是一样的
a）一样的话sliding window左边不变，右边继续增加，但是j的位置需要调整到k-1。
b）不一样的话，sliding window的左侧变为j的下一个字符（也就是去掉包含j指向的字符的区间），j的位置也需要调整到k-1。

在对i进行调整的时候（1.a），需要更新maxLen。

[注意事项]
1）在最后返回的时候，注意考虑s.length()-i这种情况，也就是字符串读取到最后而没有触发（1.a）
2）讲解清楚sliding window的更新
3）该题目有个follow-up，就是如果是k个distinct characters怎么办。这样的话就只能对所有可能的字符用一个数组去做counting，
而且只能假设ASIC字符集256。Unicode太大了
